// Code generated by mockery v2.28.0. DO NOT EDIT.

package themoviedb

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockTheMovieDbConfigurationInterface is an autogenerated mock type for the TheMovieDbConfigurationInterface type
type MockTheMovieDbConfigurationInterface struct {
	mock.Mock
}

type MockTheMovieDbConfigurationInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTheMovieDbConfigurationInterface) EXPECT() *MockTheMovieDbConfigurationInterface_Expecter {
	return &MockTheMovieDbConfigurationInterface_Expecter{mock: &_m.Mock}
}

// GetImageBaseUrl provides a mock function with given fields: ctx
func (_m *MockTheMovieDbConfigurationInterface) GetImageBaseUrl(ctx context.Context) string {
	ret := _m.Called(ctx)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetImageBaseUrl'
type MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call struct {
	*mock.Call
}

// GetImageBaseUrl is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockTheMovieDbConfigurationInterface_Expecter) GetImageBaseUrl(ctx interface{}) *MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call {
	return &MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call{Call: _e.mock.On("GetImageBaseUrl", ctx)}
}

func (_c *MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call) Run(run func(ctx context.Context)) *MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call) Return(_a0 string) *MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call) RunAndReturn(run func(context.Context) string) *MockTheMovieDbConfigurationInterface_GetImageBaseUrl_Call {
	_c.Call.Return(run)
	return _c
}

// GetImageSizes provides a mock function with given fields: ctx, imageType
func (_m *MockTheMovieDbConfigurationInterface) GetImageSizes(ctx context.Context, imageType string) []string {
	ret := _m.Called(ctx, imageType)

	var r0 []string
	if rf, ok := ret.Get(0).(func(context.Context, string) []string); ok {
		r0 = rf(ctx, imageType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// MockTheMovieDbConfigurationInterface_GetImageSizes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetImageSizes'
type MockTheMovieDbConfigurationInterface_GetImageSizes_Call struct {
	*mock.Call
}

// GetImageSizes is a helper method to define mock.On call
//   - ctx context.Context
//   - imageType string
func (_e *MockTheMovieDbConfigurationInterface_Expecter) GetImageSizes(ctx interface{}, imageType interface{}) *MockTheMovieDbConfigurationInterface_GetImageSizes_Call {
	return &MockTheMovieDbConfigurationInterface_GetImageSizes_Call{Call: _e.mock.On("GetImageSizes", ctx, imageType)}
}

func (_c *MockTheMovieDbConfigurationInterface_GetImageSizes_Call) Run(run func(ctx context.Context, imageType string)) *MockTheMovieDbConfigurationInterface_GetImageSizes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockTheMovieDbConfigurationInterface_GetImageSizes_Call) Return(_a0 []string) *MockTheMovieDbConfigurationInterface_GetImageSizes_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTheMovieDbConfigurationInterface_GetImageSizes_Call) RunAndReturn(run func(context.Context, string) []string) *MockTheMovieDbConfigurationInterface_GetImageSizes_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockTheMovieDbConfigurationInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockTheMovieDbConfigurationInterface creates a new instance of MockTheMovieDbConfigurationInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockTheMovieDbConfigurationInterface(t mockConstructorTestingTNewMockTheMovieDbConfigurationInterface) *MockTheMovieDbConfigurationInterface {
	mock := &MockTheMovieDbConfigurationInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
