// Code generated by mockery v2.28.0. DO NOT EDIT.

package themoviedb

import mock "github.com/stretchr/testify/mock"

// MockTheMovieDbClientInterface is an autogenerated mock type for the TheMovieDbClientInterface type
type MockTheMovieDbClientInterface struct {
	mock.Mock
}

type MockTheMovieDbClientInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTheMovieDbClientInterface) EXPECT() *MockTheMovieDbClientInterface_Expecter {
	return &MockTheMovieDbClientInterface_Expecter{mock: &_m.Mock}
}

// GetConfiguration provides a mock function with given fields:
func (_m *MockTheMovieDbClientInterface) GetConfiguration() ApiConfigurationResult {
	ret := _m.Called()

	var r0 ApiConfigurationResult
	if rf, ok := ret.Get(0).(func() ApiConfigurationResult); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(ApiConfigurationResult)
	}

	return r0
}

// MockTheMovieDbClientInterface_GetConfiguration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetConfiguration'
type MockTheMovieDbClientInterface_GetConfiguration_Call struct {
	*mock.Call
}

// GetConfiguration is a helper method to define mock.On call
func (_e *MockTheMovieDbClientInterface_Expecter) GetConfiguration() *MockTheMovieDbClientInterface_GetConfiguration_Call {
	return &MockTheMovieDbClientInterface_GetConfiguration_Call{Call: _e.mock.On("GetConfiguration")}
}

func (_c *MockTheMovieDbClientInterface_GetConfiguration_Call) Run(run func()) *MockTheMovieDbClientInterface_GetConfiguration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockTheMovieDbClientInterface_GetConfiguration_Call) Return(_a0 ApiConfigurationResult) *MockTheMovieDbClientInterface_GetConfiguration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTheMovieDbClientInterface_GetConfiguration_Call) RunAndReturn(run func() ApiConfigurationResult) *MockTheMovieDbClientInterface_GetConfiguration_Call {
	_c.Call.Return(run)
	return _c
}

// GetTrendingShows provides a mock function with given fields: timeWindow
func (_m *MockTheMovieDbClientInterface) GetTrendingShows(timeWindow string) ApiTrendingShowsResult {
	ret := _m.Called(timeWindow)

	var r0 ApiTrendingShowsResult
	if rf, ok := ret.Get(0).(func(string) ApiTrendingShowsResult); ok {
		r0 = rf(timeWindow)
	} else {
		r0 = ret.Get(0).(ApiTrendingShowsResult)
	}

	return r0
}

// MockTheMovieDbClientInterface_GetTrendingShows_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTrendingShows'
type MockTheMovieDbClientInterface_GetTrendingShows_Call struct {
	*mock.Call
}

// GetTrendingShows is a helper method to define mock.On call
//   - timeWindow string
func (_e *MockTheMovieDbClientInterface_Expecter) GetTrendingShows(timeWindow interface{}) *MockTheMovieDbClientInterface_GetTrendingShows_Call {
	return &MockTheMovieDbClientInterface_GetTrendingShows_Call{Call: _e.mock.On("GetTrendingShows", timeWindow)}
}

func (_c *MockTheMovieDbClientInterface_GetTrendingShows_Call) Run(run func(timeWindow string)) *MockTheMovieDbClientInterface_GetTrendingShows_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockTheMovieDbClientInterface_GetTrendingShows_Call) Return(_a0 ApiTrendingShowsResult) *MockTheMovieDbClientInterface_GetTrendingShows_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTheMovieDbClientInterface_GetTrendingShows_Call) RunAndReturn(run func(string) ApiTrendingShowsResult) *MockTheMovieDbClientInterface_GetTrendingShows_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockTheMovieDbClientInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockTheMovieDbClientInterface creates a new instance of MockTheMovieDbClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockTheMovieDbClientInterface(t mockConstructorTestingTNewMockTheMovieDbClientInterface) *MockTheMovieDbClientInterface {
	mock := &MockTheMovieDbClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
