// Code generated by mockery v2.28.0. DO NOT EDIT.

package id_generator

import mock "github.com/stretchr/testify/mock"

// MockAlphanumericIdGeneratorInterface is an autogenerated mock type for the AlphanumericIdGeneratorInterface type
type MockAlphanumericIdGeneratorInterface struct {
	mock.Mock
}

type MockAlphanumericIdGeneratorInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAlphanumericIdGeneratorInterface) EXPECT() *MockAlphanumericIdGeneratorInterface_Expecter {
	return &MockAlphanumericIdGeneratorInterface_Expecter{mock: &_m.Mock}
}

// Generate provides a mock function with given fields: length
func (_m *MockAlphanumericIdGeneratorInterface) Generate(length int) string {
	ret := _m.Called(length)

	var r0 string
	if rf, ok := ret.Get(0).(func(int) string); ok {
		r0 = rf(length)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockAlphanumericIdGeneratorInterface_Generate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Generate'
type MockAlphanumericIdGeneratorInterface_Generate_Call struct {
	*mock.Call
}

// Generate is a helper method to define mock.On call
//   - length int
func (_e *MockAlphanumericIdGeneratorInterface_Expecter) Generate(length interface{}) *MockAlphanumericIdGeneratorInterface_Generate_Call {
	return &MockAlphanumericIdGeneratorInterface_Generate_Call{Call: _e.mock.On("Generate", length)}
}

func (_c *MockAlphanumericIdGeneratorInterface_Generate_Call) Run(run func(length int)) *MockAlphanumericIdGeneratorInterface_Generate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockAlphanumericIdGeneratorInterface_Generate_Call) Return(_a0 string) *MockAlphanumericIdGeneratorInterface_Generate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAlphanumericIdGeneratorInterface_Generate_Call) RunAndReturn(run func(int) string) *MockAlphanumericIdGeneratorInterface_Generate_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockAlphanumericIdGeneratorInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockAlphanumericIdGeneratorInterface creates a new instance of MockAlphanumericIdGeneratorInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAlphanumericIdGeneratorInterface(t mockConstructorTestingTNewMockAlphanumericIdGeneratorInterface) *MockAlphanumericIdGeneratorInterface {
	mock := &MockAlphanumericIdGeneratorInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
