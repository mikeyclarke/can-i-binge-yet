#name: Test and Deploy
name: Test

on: [push]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  test_python:
    name: Python tests (Python ${{ matrix.python-versions }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-versions: [3.11.1]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.14
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry packages
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run mypy
        run: poetry run mypy --strict src/py

      - name: Run flake8
        run: poetry run flake8 src/py tests/py

      - name: Run bandit
        run: poetry run bandit -r src/py

      - name: Run Python unit tests
        run: poetry run pytest tests/py

  test_typescript:
    name: TypeScript tests (Node ${{ matrix.node-versions }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-versions: [19]

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-versions }}
          cache: 'yarn'

      - name: Install yarn packages
        run: yarn install --immutable

      - name: Run TypeScript unit tests
        run: yarn run jest

          #  deploy:
          #    name: Deploy
          #    if: github.ref == 'refs/heads/master'
          #    needs: ['test_python', 'test_typescript']
          #    runs-on: ubuntu-latest
          #
          #    steps:
          #      - uses: actions/checkout@v3
          #
          #      - name: Setup node
          #        uses: actions/setup-node@v3
          #        with:
          #          node-version: ${{ matrix.node-versions }}
          #          cache: 'yarn'
          #
          #      - name: Install yarn packages
          #        run: yarn install --immutable
          #
          #      - name: Build assets
          #        run: yarn run webpack --config webpack.production.js
          #
          #      - uses: superfly/flyctl-actions/setup-flyctl@master
          #
          #      - name: Deploy to fly.io
          #        run: flyctl deploy --remote-only --ignorefile .dockerignore.production
