from ..exceptions import InvalidConfigurationSetup as InvalidConfigurationSetup
from ..foundation import Application as Application
from ..validation import MessageBag as MessageBag
from _typeshed import Incomplete
from typing import Any

class Session:
    application: Incomplete
    drivers: Incomplete
    driver_config: Incomplete
    options: Incomplete
    data: Incomplete
    added: Incomplete
    flashed: Incomplete
    deleted: Incomplete
    deleted_flashed: Incomplete
    def __init__(self, application: Application, driver_config: dict = ...) -> None: ...
    def add_driver(self, name: str, driver: Any) -> None: ...
    def driver(self, driver: str) -> Any: ...
    def set_configuration(self, config: dict) -> Session: ...
    def get_driver(self, name: str = ...) -> Any: ...
    def get_config_options(self, driver: str = ...) -> dict: ...
    def start(self, driver: str = ...) -> Session: ...
    def get_data(self) -> dict: ...
    def save(self, driver: str = ...) -> None: ...
    def set(self, key: str, value: Any) -> None: ...
    def increment(self, key: str, count: int = ...) -> None: ...
    def decrement(self, key: str, count: int = ...) -> None: ...
    def has(self, key: str) -> bool: ...
    def get(self, key: str) -> Any: ...
    def pull(self, key: str) -> Any: ...
    def flush(self) -> None: ...
    def delete(self, key: str) -> Union[None, Any]: ...
    def flash(self, key: str, value: Any) -> None: ...
    def all(self) -> dict: ...
