from ..utils.time import cookie_expire_time as cookie_expire_time
from .Cookie import Cookie
from typing import Any, TypeVar

CookiesDict = dict[str, Cookie]

T = TypeVar('T', bound=CookieJar)

class CookieJar:
    cookies: CookiesDict
    loaded_cookies: CookiesDict
    deleted_cookies: CookiesDict
    def __init__(self) -> None: ...
    def add(self, name: str, value: str, **options: Any) -> None: ...
    def all(self) -> CookiesDict: ...
    def all_added(self) -> CookiesDict: ...
    def get(self, name: str) -> Cookie: ...
    def exists(self, name: str) -> bool: ...
    def is_expired(self, name: str) -> bool: ...
    def delete(self, name: str) -> None: ...
    def load_cookie(self, key: str, value: str) -> None: ...
    def to_dict(self) -> dict[str, str]: ...
    def load(self, cookie_string: str) -> T: ...
    def render_response(self) -> list[tuple[str, str]]: ...
