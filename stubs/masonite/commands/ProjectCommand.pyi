from ..exceptions import ProjectLimitReached as ProjectLimitReached, ProjectProviderHttpError as ProjectProviderHttpError, ProjectProviderTimeout as ProjectProviderTimeout, ProjectTargetNotEmpty as ProjectTargetNotEmpty
from .Command import Command as Command
from _typeshed import Incomplete

class ProjectCommand(Command):
    providers: Incomplete
    TIMEOUT: int
    BRANCH: float
    api_base_url: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def handle(self): ...
    def check_target_does_not_exist(self, target): ...
    def set_api_provider_url_for_repo(self, provider, repo) -> None: ...
    def get_branch_provider_data(self, provider, branch): ...
    def get_branch_archive_url(self, provider, repo, branch): ...
    def get_tag_archive_url(self, provider, repo, version): ...
    def get_releases_provider_data(self, provider): ...
    def get_release_archive_url_from_release_data(self, provider, release): ...
    def get_tags_provider_data(self, provider): ...
