from ...utils.filesystem import make_full_directory as make_full_directory, modified_date as modified_date
from ...foundation.Application import Application
from typing import Any, Callable, TypeVar

T = TypeVar('T', bound=FileDriver)

class FileDriver:
    application: Application
    options: dict[str, Any]
    def __init__(self, application: Application) -> None: ...
    def set_options(self, options: dict[str, Any]) -> None: ...
    def add(self, key: str, value: Any) -> None: ...
    def get(self, key: str, default: Any | None = ..., **options: Any) -> Any: ...
    def put(self, key: str, value: Any, seconds: int | None = ..., **options: Any) -> None: ...
    def has(self, key: str) -> bool: ...
    def increment(self, key: str, amount: int = ...) -> None: ...
    def decrement(self, key: str, amount: int = ...) -> None: ...
    def remember(self, key: str, callable: Callable[[T], None]) -> None: ...
    def forget(self, key: str) -> None: ...
    def flush(self) -> None: ...
    def get_modified_at(self, filename: str): ...
    def get_expiration_time(self, seconds: int | None) -> int: ...
    def get_value(self, value: Any) -> Any: ...
    def get_cache_expiration(self, value: str) -> int: ...
