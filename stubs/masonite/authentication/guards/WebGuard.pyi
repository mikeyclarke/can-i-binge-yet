from ...foundation.Application import Application
from ..models.authenticates import Authenticates
from typing import Any, TypeVar
from typing_extensions import Literal

T = TypeVar('T', bound=WebGuard)

class WebGuard:
    application: Application
    connection: None
    def __init__(self, application: Application) -> None: ...
    options: dict[str, Any]
    def set_options(self, options: dict[str, Any]) -> None: ...
    def attempt(self, username: str, password: str) -> Authenticates | None: ...
    def get_auth_column(self, username: str) -> str | Literal[False]: ...
    def register(self, dictionary: dict[str, Any]) -> Authenticates | Literal[False] | None: ...
    def user(self) -> Authenticates | Literal[False] | None: ...
    def attempt_by_id(self, user_id: int) -> Authenticates | Literal[False] | None: ...
    def reset_password(self, username: str, new_password: str) -> Authenticates | Literal[False] | None: ...
    def once(self) -> T: ...
    def logout(self) -> T: ...
