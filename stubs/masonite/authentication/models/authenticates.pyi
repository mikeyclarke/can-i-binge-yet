from masoniteorm.models import Model
from typing import TypeVar

T = TypeVar('T', bound=Authenticates)

class Authenticates:
    __auth__: str
    __password__: str
    def attempt(self, username: str, password: str) -> bool | Model | None: ...
    def get_auth_column(self, username: str) -> bool | str: ...
    def register(self, dictionary: dict[str, str]) -> Model: ...
    def get_id(self) -> str | int: ...
    def attempt_by_id(self, user_id: int | str) -> Model: ...
    def get_remember_token(self) -> str: ...
    remember_token: str
    def set_remember_token(self, token: str | None = ...) -> T: ...
    def reset_password(self, username: str, password: str) -> T: ...
    def get_password_column(self) -> str: ...
    def get_username_column(self) -> str: ...
