from ..foundation.Application import Application
from .Dump import Dump
from typing import Any, TypeVar

T = TypeVar('T', bound=Dumper)

class Dumper:
    app: Application
    dumps: list[Dump]
    def __init__(self, application: Application) -> None: ...
    def clear(self) -> T: ...
    def dd(self, *objects: Any) -> None: ...
    def dump(self, *objects: Any) -> list[Dump]: ...
    def get_dumps(self, ascending: bool = ...) -> list[Dump]: ...
    def last(self) -> Dump: ...
    def get_serialized_dumps(self, ascending: bool = ...) -> list[dict[str, Any]]: ...
