from ...foundation import Application
from ..File import File
from ..FileStream import FileStream
from ..UploadedFile import UploadedFile
from typing import Any, Optional, TypeVar

Options = dict[str, Any]
Content = bytes | file

T = TypeVar('T', bound=LocalDriver)

class LocalDriver:
    application: Application
    options: Options
    def __init__(self, application: Application) -> None: ...
    def set_options(self, options: Options) -> T: ...
    def get_path(self, path: str) -> str: ...
    def get_name(self, path: str, alias: str) -> str: ...
    def put(self, file_path: str, content: Content) -> Content: ...
    def put_file(self, file_path: str, content: UploadedFile, name: str | None = ...) -> str: ...
    def get(self, file_path: str) -> bytes | None: ...
    def exists(self, file_path: str) -> bool: ...
    def missing(self, file_path: str) -> bool: ...
    def stream(self, file_path: str) -> FileStream: ...
    def copy(self, from_file_path: str, to_file_path: str) -> str: ...
    def move(self, from_file_path: str, to_file_path: str) -> str: ...
    def prepend(self, file_path: str, content: Content) -> Content: ...
    def append(self, file_path: str, content: Content) -> Content: ...
    def delete(self, file_path: str) -> None: ...
    def make_directory(self, directory: str) -> None: ...
    def store(self, file: File, name: Optional[str] = ...) -> str: ...
    def make_file_path_if_not_exists(self, file_path: str) -> bool: ...
    def get_files(self, directory: str = ...) -> list[File]: ...
