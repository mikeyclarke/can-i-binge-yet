from ..container import Container
from ..providers.Provider import Provider
from .response_handler import ResponseHandler as WSGIResponseHandler
from typing import Any, Callable, Iterator, List, Tuple, Type

ResponseHandler = Callable[[dict[str, Any], WSGIResponseHandler], Iterator]

class Application(Container):
    base_path: str
    storage_path: str
    response_handler: ResponseHandler
    providers: list[Provider]
    def __init__(self, base_path: str = ...) -> None: ...
    def set_response_handler(self, response_handler: ResponseHandler) -> None: ...
    def get_response_handler(self) -> ResponseHandler: ...
    def register_providers(self, *providers: Provider) -> Application: ...
    def use_storage_path(self, path: str) -> None: ...
    def get_storage_path(self) -> str: ...
    def add_providers(self, *providers: Provider) -> Application: ...
    def get_providers(self) -> list[Provider]: ...
    def __call__(self, *args: Any, **kwargs: Any) -> Iterator[str]: ...
    def is_debug(self) -> bool: ...
    def is_dev(self) -> bool: ...
    def is_production(self) -> bool: ...
    def is_running_tests(self) -> bool: ...
    def is_running_in_console(self) -> bool: ...
    def environment(self) -> str: ...
