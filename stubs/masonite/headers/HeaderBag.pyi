from .Header import Header as Header

class HeaderBag:
    bag: dict[str, Header]
    def __init__(self) -> None: ...
    def add(self, header: Header) -> None: ...
    def add_if_not_exists(self, header: Header) -> None: ...
    def get(self, name: str) -> Header: ...
    def render(self) -> list[tuple[str, Header]]: ...
    def __contains__(self, name: str) -> bool: ...
    def convert_name(self, name: str) -> str: ...
    def convert_name_back(self, name: str) -> str: ...
    def load(self, environ: dict[str, str]) -> None: ...
    def to_dict(self) -> dict[str, str]: ...
    def __getitem__(self, key: str) -> Header: ...
