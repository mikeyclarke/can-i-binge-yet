from ...exceptions import InvalidPackageName as InvalidPackageName
from ...facades import Config as Config
from ...providers.Provider import Provider as Provider
from ...routes import Route as Route
from ...utils.filesystem import make_directory as make_directory
from ...utils.location import base_path as base_path, config_path as config_path, migrations_path as migrations_path, resources_path as resources_path, views_path as views_path
from ...utils.str import as_filepath as as_filepath, modularize as modularize
from ...utils.structures import load as load
from ...utils.time import migration_timestamp as migration_timestamp
from ..Package import Package as Package
from ..reserved_names import PACKAGE_RESERVED_NAMES as PACKAGE_RESERVED_NAMES
from _typeshed import Incomplete
from os.path import dirname as dirname

class PackageProvider(Provider):
    vendor_prefix: str
    application: Incomplete
    package: Incomplete
    default_resources: Incomplete
    def __init__(self, application) -> None: ...
    def register(self) -> None: ...
    def boot(self) -> None: ...
    def configure(self) -> None: ...
    def publish(self, resources, dry: bool = ...): ...
    def root(self, relative_dir): ...
    def name(self, name): ...
    def vendor_name(self, name): ...
    def config(self, config_filepath, publish: bool = ...): ...
    def views(self, location, publish: bool = ...): ...
    def commands(self, *commands): ...
    def presets(self, *presets): ...
    def migrations(self, *migrations): ...
    def routes(self, *routes): ...
    def controllers(self, *controller_locations): ...
    def assets(self, *assets): ...
