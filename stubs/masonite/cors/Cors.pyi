from ..foundation.Application import Application
from ..request.request import Request
from ..response.response import Response
from typing import Any


class Cors:
    application: Application
    options: dict[str, Any]
    def __init__(self, application: Application, options: dict[str, Any] = ...) -> None: ...
    def set_options(self, options: dict[str, Any]) -> Cors: ...
    def is_single_origin_allowed(self) -> bool: ...
    def is_preflight(self, request: Request) -> bool: ...
    def is_cors(self, request: Request) -> bool: ...
    def is_allowed(self, request: Request) -> bool: ...
    def matches(self, request: Request) -> bool: ...
    def build_preflight_response(self, request: Request, response: Response) -> Response: ...
    def set_allowed_origin(self, request: Request, response: Response) -> Response: ...
    def update_vary_header(self, response: Response, value: str) -> Response: ...
    def set_allowed_headers(self, request: Request, response: Response) -> Response: ...
    def set_allowed_methods(self, request: Request, response: Response) -> Response: ...
    def set_max_age(self, response: Response) -> Response: ...
    def set_exposed_headers(self, response: Response) -> Response: ...
    def set_allowed_credentials(self, response: Response) -> Response: ...
    def add_actual_request_headers(self, request: Request, response: Response) -> Response: ...
